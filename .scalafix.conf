rules = [
  Disable
  DisableSyntax
  LeakingImplicitClassVal
  MissingFinal
  NoValInForComprehension
  OrganizeImports
  ProcedureSyntax
  RemoveUnused
]

OrganizeImports {
  expandRelative = true
  removeUnused = true
  groups = [
    "cats.",
    "higherkindness.droste.",
    "org.apache.jena.",
    "org.apache.spark.",
    "com.gsk.kg.",
    "re:java?\\.",
    "scala.",
    "*"
  ]
}

RemoveUnused.imports = true

Disable.ifSynthetic = [
  "scala/Option.option2Iterable"
  "scala/Predef.any2stringadd"
  {
    regex = {
      includes = [
        "^\\Qscala/collection/MapLike#apply().\\E$"
        "^\\Qscala/collection/LinearSeqOptimized#apply().\\E$"
      ]
    }
    id = "collection.apply"
    message = """
      Try not to use apply method from collections, it is not a total function.
      To disable this error you can use:
        - @SuppressWarnings(Array("scalafix:Disable.collection.apply"))
        - // scalafix:ok Disable.collection.apply
    """
  }
]

DisableSyntax {
  noDefaultArgs = true
  noFinalVal = true
  noFinalize = true
  noImplicitConversion = true
  noImplicitObject = true
  noIsInstanceOf = true
  noReturns = true
  noSemicolons = true
  noTabs = true
  noThrows = false
  noUniversalEquality = false
  noValInAbstract = false
  noValPatterns = true
  noWhileLoops = false
  noXml = true
}