PREFIX  schema: <http://schema.org/>
PREFIX  rdf:  <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  xml:  <http://www.w3.org/XML/1998/namespace>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  dm:   <http://gsk-kg.rdip.gsk.com/dm/1.0/>
PREFIX  prism: <http://prismstandard.org/namespaces/basic/2.0/>
PREFIX  litg:  <http://lit-search-api/graph/>
PREFIX  litn:  <http://lit-search-api/node/>
PREFIX  lite:  <http://lit-search-api/edge/>
PREFIX  litp:  <http://lit-search-api/property/>


CONSTRUCT
{
    ?Year a litn:Year;
        lite:Year_TO_MONTH ?YearMonth;
        litp:year ?year;
        a xsd:integer.
    ?YearMonth a litn:YearMonth;
        lite:MONTH_TO_DAY ?MonthDay;
        litp:month ?month;
        a xsd:integer.
    ?MonthDay a litn:MonthDay;
        litp:day ?day;
        a xsd:integer.

    ?Document a litn:Document;
        lite:HAS_KEYWORD ?Keyword;
        lite:DOC_HAS_TEXT_ELEMENT ?TextElement;
        lite:DOC_HAS_CONCEPT ?OntologyConcept;
        lite:DOC_HAS_SECTION ?DocSection;
        lite:DOC_HAS_MONTHDAY ?MonthDay;
        litp:docSource ?src;
        litp:doi ?doi;
        litp:pmid ?pmid;
        litp:origId ?origId;
        litp:title ?title;
        litp:docID ?dociD;
        litp:sectionType ?sectype.

    ?Keyword a litn:Keyword;
        litp:name ?name.

    ?OntologyConcept a litn:OntologyConcept;
        lite:PART_OF_SECTION ?DocSection.

    ?DocSection a litn:DocSection;
        lite:SECTION_HAS_TEXT_ELEMENT ?TextElement;
        lite:SECTION_HAS_ENTITY ?DetectedEntity;
        litp:sectionId ?sectionid;
        a xsd:number;
        litp:heading ?heading;
        a xsd:string.


    ?TextElement a litn:TextElement;
        lite:TEXT_HAS_ENTITY ?DetectedEntity;
        litp:text ?text.

    ?DetectedEntity a litn:DetectedEntity;
        lite:ENTITY_LINK ?EntityLink;
        lite:LINKED_BY_ENTITY ?OntologyConcept;
        litp:entityId ?entityId;
        a xsd:number;
        litp:contextTokens ?contextTokens;
        a xsd:list;
        litp:entityClass ?entityClass;
        litp:indexStart ?indexStart;
        a xsd:number;
        litp:indexEnd ?indexEnd;
        a xsd:number.

    #these three need unique variable names to differentiate the linkage types
    ?DetectedEntity_sub a litn:DetectedEntity;
        lite:SUB_OF ?Predication.
    ?DetectedEntity_obj a litn:DetectedEntity;
        lite:OBJ_OF ?Predication.
    ?DetectedEntity_part a litn:DetectedEntity;
        lite:PART_OF_PREDICTAION ?Predication.

    ?EntityLink a litn:EntityLink;
        lite:ENTITY_LINK ?OntologyConcept;
        litp:confidence ?confidence;
        a xsd:number.

    ?Predication a litn:Predication;
        litp:predicationId ?predicationId;
        a xsd:number;
        litp:modelName ?modelName;
        litp:relationClass ?relationClass;
        litp:confidence ?confidence;
        a xsd:number.

}
WHERE
{
    ?d a dm:Document .
    ?d dm:docSource ?src .
    ?d schema:title ?title .
    ?d dm:contains ?ds .
    ?ds a dm:DocSection .
    OPTIONAL { ?d dm:pubDateYear ?year }
    FILTER (?year > "2015")
    OPTIONAL { ?d dm:origId ?origId }
    OPTIONAL { ?d prism:doi ?name }
    OPTIONAL { ?d dm:pmid ?pmid }
    OPTIONAL { ?d prism:keyword ?kw }
    OPTIONAL { ?d dm:pubDateMonth ?month }
    OPTIONAL { ?d dm:pubDateDay ?day }
    OPTIONAL { ?ds dm:heading ?heading }
    OPTIONAL { ?ds prism:section ?sectype }


    ?ds dm:contains ?te .
    ?te a dm:TextElement .
    ?te dm:contains ?de .
    ?de a dm:DetectedEntity .
    ?de dm:entityLink ?le .
    ?le a dm:LinkedEntity .
    OPTIONAL { ?le dm:confidence ?linkconf }
    ?le dm:mappedTo ?OntologyConcept .


    ?te dm:text ?txt .
    OPTIONAL { ?te dm:tokens ?contextTokens }
    ?de dm:text ?etxt .
    ?de dm:predEntityClass ?entityClass .
    ?entityClass dm:predClass ?cls .
    OPTIONAL { ?entityClass dm:confidence ?conf }
    ?de dm:indexStart ?indexStart .
    ?de dm:indexEnd ?indexEnd .
    OPTIONAL {
        ?de dm:predictedBy ?model .
        ?model dm:modelName ?modelname .
        BIND(STRAFTER(str(?modelname), "ner:") as ?nermodel) .
        FILTER (STRSTARTS(str(?modelname), "ner:")).
    }
    OPTIONAL {
        ?de dm:predictedBy ?model .
        ?model dm:modelName ?modelname .
        BIND(STRAFTER(str(?modelname), "norm:") as ?normmodel) .
        FILTER (STRSTARTS(str(?modelname), "norm:")).
    }

    ?te dm:contains ?p .
    ?p a dm:Predication .
    ?p dm:predictedBy ?remodel .
    ?remodel a dm:REModel .
    ?remodel dm:modelName ?modelname .
    ?p dm:hasSubject ?deSubj .
    ?p dm:hasObject ?deObj .
    ?p dm:predRelation ?b .
    ?b dm:predClass ?relationClass .
    OPTIONAL { ?b dm:confidence ?confidence }

    BIND(STRAFTER(str(?d), "#") as ?docid) .
    BIND(URI(CONCAT("http://lit-search-api/node/doc#", ?docid)) as ?Document) .
    BIND(STRAFTER(str(?ds), "#") as ?secid) .
    BIND(URI(CONCAT("http://lit-search-api/node/docsec#", ?secid)) as ?DocSection) .
    BIND(STRAFTER(str(?day), "#") as ?mday) .
    BIND(URI(CONCAT("http://lit-search-api/node/monthday#", ?mday)) as ?MonthDay) .
    BIND(STRAFTER(str(?month), "#") as ?ymonth) .
    BIND(URI(CONCAT("http://lit-search-api/node/yearmonth#", ?ymonth)) as ?YearMonth) .
    BIND(STRAFTER(str(?year), "#") as ?yearyear) .
    BIND(URI(CONCAT("http://lit-search-api/node/year#", ?yearyear)) as ?Year) .
    BIND(STRAFTER(str(?kw), "#") as ?keyw) .
    BIND(URI(CONCAT("http://lit-search-api/node/monthday#", ?keyw)) as ?Keyword) .
    BIND(STRAFTER(str(?te), "#") as ?textE) .
    BIND(URI(CONCAT("http://lit-search-api/node/textelement#", ?textE)) as ?TextElement) .
    BIND(STRAFTER(str(?le), "#") as ?linke) .
    BIND(URI(CONCAT("http://lit-search-api/node/entitylink#", ?linke)) as ?EntityLink) .
    BIND(STRAFTER(str(?p), "#") as ?predid) .
    BIND(URI(CONCAT("http://lit-search-api/node/predication#", ?predid)) as ?Predication) .

    ######Several Detected Enities required
    BIND(STRAFTER(str(?de), "#") as ?entid) .
    BIND(URI(CONCAT("http://lit-search-api/node/entity#", ?entid)) as ?DetectedEntity) .
    BIND(STRAFTER(str(?deSubj), "#") as ?entid1) .
    BIND(URI(CONCAT("http://lit-search-api/node/entity#", ?entid1)) as ?DetectedEntity_sub) .
    BIND(STRAFTER(str(?deObj), "#") as ?entid2) .
    BIND(URI(CONCAT("http://lit-search-api/node/entity#", ?entid2)) as ?DetectedEntity_obj) .
    BIND(STRAFTER(str(?b), "#") as ?entid3) .
    BIND(URI(CONCAT("http://lit-search-api/node/entity#", ?entid3)) as ?DetectedEntity_part) .

}